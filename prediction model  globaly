import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import numpy as np
import matplotlib.ticker as mticker

# Load and clean dataset
df = pd.read_csv('ev_sales_yearwise_by_region.csv')
df.columns = df.columns.str.strip()

# Convert to long format
df_long = df.melt(id_vars='Year', var_name='Region', value_name='EV_Sales')
df_long['Year'] = pd.to_numeric(df_long['Year'], errors='coerce')
df_long['EV_Sales'] = pd.to_numeric(df_long['EV_Sales'], errors='coerce')
df_long.dropna(inplace=True)

# Predict for future years
future_years = list(range(2025, 2031))

for region in df_long['Region'].unique():
    region_data = df_long[df_long['Region'] == region]
    X = region_data[['Year']]
    y = region_data['EV_Sales']

    # Train model
    model = LinearRegression()
    model.fit(X, y)

    # Predict future
    future_X = pd.DataFrame({'Year': future_years})
    future_y = model.predict(future_X)

    # Combine data
    pred_df = pd.DataFrame({
        'Year': future_years,
        'EV_Sales': future_y,
        'Type': 'Predicted'
    })
    actual_df = region_data.copy()
    actual_df['Type'] = 'Actual'

    # ðŸ“Š Plotting
    plt.figure(figsize=(10, 6))
    plt.plot(actual_df['Year'], actual_df['EV_Sales'], marker='o', color='blue', label='Actual')
    plt.plot(pred_df['Year'], pred_df['EV_Sales'], marker='o', linestyle='--', color='green', label='Predicted')

    plt.title(f'EV Sales Trend & Forecast - {region}', fontsize=14)
    plt.xlabel('Year', fontsize=12)
    plt.ylabel('EV Sales (Millions)', fontsize=12)

    # âœ… Custom ticks
    plt.xticks(np.arange(2010, 2031, 1))  # X-axis starts at 2010

    # âœ… Format Y-axis in millions
    ax = plt.gca()
    ax.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f'{x*1e-6:.1f}M'))

    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()
