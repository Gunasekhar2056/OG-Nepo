import pandas as pd

# Load and inspect
df = pd.read_csv('/content/ev_sales_yearwise_by_region.csv')
df.columns = df.columns.str.strip()

# Melt wide format to long format
df_long = df.melt(id_vars='Year', var_name='Region', value_name='EV_Sales')

# Convert to numeric
df_long['Year'] = pd.to_numeric(df_long['Year'], errors='coerce')
df_long['EV_Sales'] = pd.to_numeric(df_long['EV_Sales'], errors='coerce')

# Drop missing values
df_long.dropna(inplace=True)

print(df_long.head())
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

future_years = pd.DataFrame({'Year': list(range(2025, 2031))})
predictions = {}

for region in df_long['Region'].unique():
    region_data = df_long[df_long['Region'] == region]
    
    X = region_data[['Year']]
    y = region_data['EV_Sales']
    
    if len(X) < 2:
        print(f"Skipping {region}, not enough data.")
        continue

    model = LinearRegression()
    model.fit(X, y)

    future_pred = model.predict(future_years)
    predictions[region] = future_pred

    # Plot actual + prediction
    plt.figure(figsize=(8, 4))
    plt.scatter(X, y, label='Actual')
    plt.plot(future_years['Year'], future_pred, color='red', linestyle='--', label='Predicted')
    plt.title(f"EV Sales Prediction for {region}")
    plt.xlabel("Year")
    plt.ylabel("EV Sales")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()

